@using LightOps.NeuralLens.Component.WorkspaceApiConnector.Codegen

@inject IWorkspaceApiClient WorkspaceApiClient
@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.subtitle1">@(Workspace.Id == null ? "Create new workspace" : "Edit workspace")</MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@Workspace" @ref="@_form">
            <MudTextField @bind-Value="Workspace.Name"
                          For="@(() => Workspace.Name)"
            Immediate="true"
            Label="Name"/>

            <MudTextField @bind-Value="Workspace.Description"
                          For="@(() => Workspace.Description)"
            Immediate="true"
            Label="Description"/>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit" Disabled="@(string.IsNullOrWhiteSpace(Workspace.Name))">
            @(Workspace.Id == null ? "Create" : "Update")
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance? MudDialog { get; set; }

    [Parameter]
    public WorkspaceViewModel Workspace { get; set; } = new();

    private MudForm _form = new();
    
    private async Task Submit()
    {
        if (Workspace.Id == null)
        {
            // Create new
            var newWorkspace = await WorkspaceApiClient.CreateWorkspaceAsync(Workspace.OrganizationId, new CreateWorkspaceRequest
                {
                    Name = Workspace.Name,
                    Description = Workspace.Description,
                });
            Snackbar.Add("Workspace created", Severity.Success);
            MudDialog?.Close(DialogResult.Ok(newWorkspace));
        }
        
        // Update existing
        var updatedWorkspace = await WorkspaceApiClient.UpdateWorkspaceAsync(Workspace.OrganizationId, Workspace.Id, new UpdateWorkspaceRequest
        {
                Name = Workspace.Name,
                Description = Workspace.Description,
        });
        Snackbar.Add("Workspace updated", Severity.Success);
        MudDialog?.Close(DialogResult.Ok(updatedWorkspace));
    }

    private void Cancel() => MudDialog?.Cancel();
}