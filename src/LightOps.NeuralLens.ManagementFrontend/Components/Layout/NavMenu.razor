@using LightOps.NeuralLens.Component.OrganizationApiConnector.Codegen
@using LightOps.NeuralLens.Component.WorkspaceApiConnector.Codegen

@inject NavigationManager NavigationManager
@inject IDialogService DialogService

<!-- Organization and Workspace selector -->
<MudContainer Gutters="false">
    <MudStack Row="true" StretchItems="StretchItems.Middle" Class="pa-4">
        <MudStack Justify="Justify.Center" Spacing="0">
            <MudIcon Size="Size.Small" Icon="@Icons.Material.TwoTone.Business" />
        </MudStack>
        <MudStack Justify="Justify.Center" Spacing="0">
            <MudText Typo="Typo.caption">Workspace</MudText>
            <MudText Typo="Typo.body2">@(Workspace?.Name ?? "-")</MudText>
            <MudText Typo="Typo.caption">@(Organization?.Name ?? "-")</MudText>
        </MudStack>
        <MudStack Justify="Justify.Center" Spacing="0">
            <MudIconButton Size="Size.Small" Icon="@Icons.Material.TwoTone.SwapVert" OnClick="@((_) => OpenSelectWorkspaceDialog())" />
        </MudStack>
    </MudStack>
    <MudDivider/>
</MudContainer>

<!-- Site navigation -->
<MudContainer Gutters="false">
    <MudNavMenu>
        <MudNavLink Href="@(Organization != null
                      ? Workspace != null
                          ? RouteUris.Workspace(Organization.Id, Workspace.Id)
                          : RouteUris.Organization(Organization.Id)
                      : RouteUris.Home)"
            Icon="@Icons.Material.TwoTone.Home"
            Match="NavLinkMatch.All">
            Home
        </MudNavLink>
    </MudNavMenu>
    <MudDivider />
</MudContainer>

<MudSpacer />

@if (Organization != null)
{
    <!-- Organization settings navigation -->
    <MudContainer Gutters="false">
        <MudText Typo="Typo.overline" Class="px-4">Organization settings</MudText>
        <MudNavMenu>
            <MudNavLink Href="@($"/org/{Organization.Id}/space")" Icon="@Icons.Material.TwoTone.Workspaces" Match="NavLinkMatch.All">Workspaces</MudNavLink>
        </MudNavMenu>
    </MudContainer>
}

<!-- Global settings navigation -->
<MudContainer Gutters="false">
    <MudText Typo="Typo.overline" Class="px-4">Settings</MudText>
    <MudNavMenu>
        <MudNavLink Href="/org" Icon="@Icons.Material.TwoTone.Business" Match="NavLinkMatch.All">Organizations</MudNavLink>
    </MudNavMenu>
</MudContainer>

<!-- User navigation -->
<MudPaper Square="true" Elevation="0" Class="mt-4">
    <MudContainer Gutters="false">
        <MudStack Row="true" StretchItems="StretchItems.Middle" Class="pa-4">
            <MudStack Justify="Justify.Center" Spacing="0">
                <MudAvatar Size="Size.Small">
                    <MudIcon Size="Size.Small" Icon="@Icons.Material.TwoTone.Person" />
                </MudAvatar>
            </MudStack>
            <MudStack Justify="Justify.Center" Spacing="0">
                <MudText Typo="Typo.body2" Style="word-break: break-word; font-weight: bold;">Unauthenticated</MudText>
                <MudText Typo="Typo.caption">Guest</MudText>
            </MudStack>
            <MudStack Justify="Justify.Center" Spacing="0">
                <MudIconButton Size="Size.Small" Icon="@Icons.Material.TwoTone.MoreVert" Href="#" Disabled="true" />
            </MudStack>
        </MudStack>
    </MudContainer>
</MudPaper>

@code {
    [CascadingParameter(Name = "Organization")]
    public OrganizationViewModel? Organization { get; set; }

    [CascadingParameter(Name = "Workspace")]
    public WorkspaceViewModel? Workspace { get; set; }

    private async Task OpenSelectWorkspaceDialog()
    {
        var options = new DialogOptions
        {
            CloseOnEscapeKey = true,
            FullWidth = true,
        };

        var dialogRef = await DialogService.ShowAsync<SelectWorkspaceDialog>("Select workspace", options);
        var selectedWorkspace = await dialogRef.GetReturnValueAsync<WorkspaceViewModel>();
        if (selectedWorkspace != null)
        {
            // Send user to selected workspace
            NavigationManager.NavigateTo(RouteUris.Workspace(selectedWorkspace.OrganizationId, selectedWorkspace.Id));
        }
    }

}
